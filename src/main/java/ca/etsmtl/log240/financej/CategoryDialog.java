package ca.etsmtl.log240.financej;
/*
 * Category.java
 *
 * Created on March 9, 2008, 6:03 PM
 */

import java.sql.*;
import javax.swing.*;

/**
 *
 * @author  rovitotv
 */
public class CategoryDialog extends javax.swing.JDialog {

    private Connection conn = null;
    private CategoryTableModel dataModel;

    /** Creates new form Category */
    public CategoryDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        CategoryListTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    }

    public void SetDBConnection(Connection DBConn) {
        conn = DBConn;
        dataModel = new CategoryTableModel(conn);
        CategoryListTable.setModel(dataModel);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CloseButton = new javax.swing.JButton();
        DeleteCategoryButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        AddCategoryButton = new javax.swing.JButton();
        NameTextField = new javax.swing.JTextField();
        NameTextField.setName("NAME_TEXT_FIELD");
        DescriptionTextField = new javax.swing.JTextField();
        DescriptionTextField.setName("DESCRIPTION_TEXT_FIELD");
        BudgetTextField = new javax.swing.JTextField();
        BudgetTextField.setName("BUDGET_TEXT_FIELD");
        jScrollPane1 = new javax.swing.JScrollPane();
        CategoryListTable = new javax.swing.JTable();

        setTitle("Categories");

        CloseButton.setText("Close");
        CloseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseButtonActionPerformed(evt);
            }
        });

        DeleteCategoryButton.setText("Delete Category");
        DeleteCategoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteCategoryButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Name:");

        jLabel2.setText("Description:");

        jLabel3.setText("Budget:");

        AddCategoryButton.setText("Add Category");
        AddCategoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddCategoryButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DescriptionTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 405, Short.MAX_VALUE)
                    .addComponent(NameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 405, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(BudgetTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 111, Short.MAX_VALUE)
                        .addComponent(AddCategoryButton)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(NameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(DescriptionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(BudgetTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AddCategoryButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        CategoryListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null}
            },
            new String [] {
                "Name", "Description", "Budget"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(CategoryListTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(293, Short.MAX_VALUE)
                .addComponent(DeleteCategoryButton)
                .addGap(18, 18, 18)
                .addComponent(CloseButton)
                .addContainerGap())
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 506, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CloseButton)
                    .addComponent(DeleteCategoryButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void AddCategoryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddCategoryButtonActionPerformed
        int ReturnCode;
        String BudgetValue;
        float Budget;
        
        BudgetValue = BudgetTextField.getText();
        Budget = Float.valueOf(BudgetValue.trim()).floatValue();


        /**
         *  // ken ajouter code de teste les validite des valeur ******************************
         *
         * **/
        /**
         *  verifier les valeurs d'entr√©es sont valide ******************************
         * correction des erreurs
         * **/
        String regExpression = "[a-zA-Z_0-9 ]*";
        //String regExpression = "[a-zA-Z_0-9]*";
        String nom=NameTextField.getText();
        String desc=DescriptionTextField.getText();

        boolean entreesValides=true;

        //verifier si les valeurs entrer c'est des valeurs alphanumerique
        //nom valide entre 3 ert 25 caracteres
        if(nom.length()<3||nom.length()>25 ){
            entreesValides=false;
            JOptionPane.showMessageDialog(this,
                    "nom valide entre 3 et 25 caracteres ",
                    "Error", JOptionPane.ERROR_MESSAGE);

        }
        //taille description valide entre 5 et 255
        if(desc.length()<5 ||desc.length()>255 ){
            entreesValides=false;
            JOptionPane.showMessageDialog(this,
                    "Description valide au mois 5 caracteres ",
                    "Error", JOptionPane.ERROR_MESSAGE);

        }
        //valeur alphanumerique
        if(!nom.trim().matches(regExpression) || !desc.trim().matches(regExpression) ){
            entreesValides=false;
            JOptionPane.showMessageDialog(this,
                    "le nom et description doivent etre des valeurs alphanumerique",
                    "Error", JOptionPane.ERROR_MESSAGE);


        }
        if( Budget<0){
            entreesValides=false;
            JOptionPane.showMessageDialog(this,
                    "le Budget doit etre positif",
                    "Error", JOptionPane.ERROR_MESSAGE);
        }
        //ajouter le categorie si les valeurs d'entre√©s sont valide

        if(entreesValides) {
            ReturnCode = dataModel.AddCategory(NameTextField.getText(), DescriptionTextField.getText(), Budget);
            if (ReturnCode == 0) {
                NameTextField.setText("");
                DescriptionTextField.setText("");
                BudgetTextField.setText("");
            } else {
                JOptionPane.showMessageDialog(this,
                        "Error Adding category to database.  Make sure the category name you specified does not already exist.",
                        "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
}//GEN-LAST:event_AddCategoryButtonActionPerformed

    private void CloseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseButtonActionPerformed
        setVisible(false);
    }//GEN-LAST:event_CloseButtonActionPerformed

    private void DeleteCategoryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteCategoryButtonActionPerformed
        if (CategoryListTable.getSelectionModel().getLeadSelectionIndex() >= 0) {
            System.out.println("delete row:" + CategoryListTable.getSelectionModel().getLeadSelectionIndex());
            dataModel.DeleteCategory(CategoryListTable.getSelectionModel().getLeadSelectionIndex());
        } else { //nothing selected give error messge
            JOptionPane.showMessageDialog(this,
                    "No category selected to delete, please select a category then click the delete button.",
                    "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_DeleteCategoryButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                CategoryDialog dialog = new CategoryDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddCategoryButton;
    private javax.swing.JTextField BudgetTextField;
    private javax.swing.JTable CategoryListTable;
    private javax.swing.JButton CloseButton;
    private javax.swing.JButton DeleteCategoryButton;
    private javax.swing.JTextField DescriptionTextField;
    private javax.swing.JTextField NameTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
